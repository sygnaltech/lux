{
  "version": 3,
  "sources": ["../src/maternityCalc.ts"],
  "sourcesContent": ["/*\n * SITE \n * Maternity Calc\n * \n */\n\n\n// Standard gestation period of 40 weeks\nconst DAYS_IN_PREGNANCY = 280;\n\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport class MaternityCalc {\n\n    _edd: Date;\n\n    constructor(edd: Date) {\n      \n      this._edd = edd;\n\n    }\n    \n    // Gestational Age: This is the age of the pregnancy calculated from the first day of the LMP. This method assumes a standard 28-day menstrual cycle and a 40-week pregnancy duration (280 days).\n    get lmpDate(): Date {\n\n      const eddDate = new Date(this._edd);\n  \n      // Calculate the LMP by subtracting 280 days from the EDD\n      const lmpDate = new Date(\n        eddDate.getTime() - DAYS_IN_PREGNANCY * MS_PER_DAY\n      );\n  \n      return lmpDate;\n    }\n\n    // Embryonic Age: This is the actual age of the embryo, which is approximately 2 weeks less than the gestational age, as it starts counting from the time of conception, which usually occurs about 2 weeks after the LMP.\n    get conceptionDate(): Date {\n      const lmpDate = new Date(this.lmpDate);\n  \n      // Calculate the LMP by subtracting 280 days from the EDD\n      const conceptionDate = new Date(\n        lmpDate.getTime() + 14 * MS_PER_DAY\n      );\n\n      return conceptionDate;\n    }\n\n    // 1-based\n    get dayOf(): number {\n      // Normalize the dates to remove the time portion\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Set the time of today to midnight\n  \n      const lmpDate = new Date(this.lmpDate);\n      lmpDate.setHours(0, 0, 0, 0); // Set the time of lmpDate to midnight\n\n      // Calculate the difference in time between the normalized dates\n      const diffTime = Math.abs(today.getTime() - lmpDate.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n      return diffDays + 1;\n  }\n  \n\n    // 1-based\n    get weekOf(): number {\n\n      const weeks = Math.floor(this.dayOf / 7);\n\n      return weeks + 1; \n    }\n\n    getDayDate(day: number): Date {\n      return this._edd;\n    }\n\n    getWeekStartDate(week: number): Date {\n      return this._edd;\n    }\n\n    getWeekEndDate(week: number): Date {\n      return this._edd;\n    }\n\n    /**\n     * Estimates the due date using Naegele's rule \n     * @param lmp Date of last menstral period (LMP)\n     * @returns MaternityCalc Instance\n     */\n    static createFromLMP(lmp: Date): MaternityCalc {\n\n      const date = new Date(lmp);\n      date.setFullYear(date.getFullYear() + 1); // Add one year\n      date.setMonth(date.getMonth() - 3); // Subtract three months\n      date.setDate(date.getDate() + 7); // Add seven days\n\n      return new MaternityCalc(date);\n    }\n    \n}\n\n"],
  "mappings": ";;;AAQA,MAAM,oBAAoB;AAE1B,MAAM,aAAa,MAAO,KAAK,KAAK;AAE7B,MAAM,gBAAN,MAAoB;AAAA,IAIvB,YAAY,KAAW;AAErB,WAAK,OAAO;AAAA,IAEd;AAAA,IAGA,IAAI,UAAgB;AAElB,YAAM,UAAU,IAAI,KAAK,KAAK,IAAI;AAGlC,YAAM,UAAU,IAAI;AAAA,QAClB,QAAQ,QAAQ,IAAI,oBAAoB;AAAA,MAC1C;AAEA,aAAO;AAAA,IACT;AAAA,IAGA,IAAI,iBAAuB;AACzB,YAAM,UAAU,IAAI,KAAK,KAAK,OAAO;AAGrC,YAAM,iBAAiB,IAAI;AAAA,QACzB,QAAQ,QAAQ,IAAI,KAAK;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAAA,IAGA,IAAI,QAAgB;AAElB,YAAM,QAAQ,IAAI,KAAK;AACvB,YAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AAEzB,YAAM,UAAU,IAAI,KAAK,KAAK,OAAO;AACrC,cAAQ,SAAS,GAAG,GAAG,GAAG,CAAC;AAG3B,YAAM,WAAW,KAAK,IAAI,MAAM,QAAQ,IAAI,QAAQ,QAAQ,CAAC;AAC7D,YAAM,WAAW,KAAK,KAAK,YAAY,MAAO,KAAK,KAAK,GAAG;AAE3D,aAAO,WAAW;AAAA,IACtB;AAAA,IAIE,IAAI,SAAiB;AAEnB,YAAM,QAAQ,KAAK,MAAM,KAAK,QAAQ,CAAC;AAEvC,aAAO,QAAQ;AAAA,IACjB;AAAA,IAEA,WAAW,KAAmB;AAC5B,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,iBAAiB,MAAoB;AACnC,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,eAAe,MAAoB;AACjC,aAAO,KAAK;AAAA,IACd;AAAA,IAOA,OAAO,cAAc,KAA0B;AAE7C,YAAM,OAAO,IAAI,KAAK,GAAG;AACzB,WAAK,YAAY,KAAK,YAAY,IAAI,CAAC;AACvC,WAAK,SAAS,KAAK,SAAS,IAAI,CAAC;AACjC,WAAK,QAAQ,KAAK,QAAQ,IAAI,CAAC;AAE/B,aAAO,IAAI,cAAc,IAAI;AAAA,IAC/B;AAAA,EAEJ;",
  "names": []
}
