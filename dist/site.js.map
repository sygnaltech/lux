{
  "version": 3,
  "sources": ["../src/site.ts"],
  "sourcesContent": ["\n/*\n * SITE \n * Site-wide Code \n * \n */\n\n\n\nexport class Site {\n\n    constructor() {\n    }\n    \n    init() {\n\n        this.addActionToBookLinks();\n                    \n    }\n\n    // Function to add ?action=book to elements with the [pd-book] attribute\n    addActionToBookLinks(): void {\n        // Select all elements with the [pd-book] attribute\n        const bookElements = document.querySelectorAll('[pd-book]') as NodeListOf<HTMLAnchorElement>;\n    \n        // Iterate over the selected elements\n        bookElements.forEach(element => {\n        const currentHref = element.getAttribute('href');\n        if (currentHref) {\n            // Update the href attribute with the new query parameter\n            element.setAttribute('href', `${currentHref}?action=book`);\n        }\n        });\n    }\n  \n}  \n\n    \n/*\nold code\n\n// Define the lookup table for locales and their corresponding path prefixes\nconst localePaths = {\n    \"en\": \"\", // Assuming \"en\" is the primary locale and has no prefix\n    \"zh\": \"/zh\", // Example for Chinese\n    // Add more locales and their prefixes as needed\n};  \n  \n// Function to determine the current page's locale\nfunction getCurrentLocale() {\n    return document.documentElement.lang || \"en\"; // Default to \"en\" if no lang attribute is found\n}  \n  \n// Function to update the href attributes for links with the custom attribute \"wfu-local-url\"\nfunction updateLinksForLocale() {\n    const currentLocale = getCurrentLocale();\n  \n  console.log(currentLocale)\n  \n    const pathPrefix = localePaths[currentLocale] || \"\"; // Default to empty string if the locale is not found in the lookup table\n    \n   console.log(pathPrefix)\n  \n    // Find all links with the custom attribute \"wfu-local-url\"\n    const links = document.querySelectorAll('a[wfu-locale-url]');\n    \n    links.forEach(link => {\n        // Prepend the pathPrefix to the href attribute, if it's not already there\n        if (!link.href.startsWith(pathPrefix)) {\n            // Ensure to handle absolute URLs correctly\n            // Extract the base URL if the href is absolute, and then prepend the pathPrefix\n            const baseUrl = link.href.replace(window.location.origin, \"\");\n            link.href = `${window.location.origin}${pathPrefix}${baseUrl}`;\n        }\n    });\n}  \n  \n// Call updateLinksForLocale to update links as soon as the script runs\nupdateLinksForLocale();  \n  \n  \n//   $(\"[wfu-query]\").each(function() {\n//     console.log($(this).attr(\"href\"));\n//     const url = new URL($(this).attr(\"href\"),\n//                        window.location.origin\n//                        );\n    \n//     const params = url.searchParams;\n//     const newParams = new URLSearchParams($(this).attr(\"wfu-query\"));\n    \n//     console.log(params.toString());\n//     console.log(newParams.toString());\n    \n//   });\n  \n  \n});\n\n// Google Tag Manager Tracking\n$(\"[wfu-gtm-event]\").click(function() {\n  console.debug('Button clicked - GTM tracking');\n  var data = {\n    'event': $(this).attr('wfu-gtm-event')\n  };\n\n  // Find GTM Event attributes\n  // and add to dataLayer\n  const dataLayerAttrPrefix = \"wfu-gtm-event-\";\n  $.each(this.attributes, function() {\n       console.debug(`attr ${this.name}`); \n    \n     if(this.name.startsWith(dataLayerAttrPrefix)) {\n       var dataLayerVar = this.name.substring(dataLayerAttrPrefix.length);\n       console.debug(`wfu-attr ${dataLayerVar} ${this.value}`); \n       data[dataLayerVar] = this.value;\n      }\n   });\n  \n  dataLayer.push(data);\n  console.log(JSON.stringify(data,null,3));\n  \n});\n*/    "],
  "mappings": ";;;AASO,MAAM,OAAN,MAAW;AAAA,IAEd,cAAc;AAAA,IACd;AAAA,IAEA,OAAO;AAEH,WAAK,qBAAqB;AAAA,IAE9B;AAAA,IAGA,uBAA6B;AAEzB,YAAM,eAAe,SAAS,iBAAiB,WAAW;AAG1D,mBAAa,QAAQ,aAAW;AAChC,cAAM,cAAc,QAAQ,aAAa,MAAM;AAC/C,YAAI,aAAa;AAEb,kBAAQ,aAAa,QAAQ,GAAG,yBAAyB;AAAA,QAC7D;AAAA,MACA,CAAC;AAAA,IACL;AAAA,EAEJ;",
  "names": []
}
